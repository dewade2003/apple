<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--窗体标题栏-->
    <ImageBrush x:Key="WindowTitleStyle" ImageSource="/Themes;component/Default/Images/titlebg.png"/>
    <ImageBrush x:Key="WindowBottomStyle" ImageSource="/Themes;component/Default/Images/toolbarbg.png"/>
    <SolidColorBrush x:Key="DefaultPanelStyle" Color="#ffffff"/>
    <SolidColorBrush x:Key="MainColor" Color="#00a3e7"/>
    <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <!--窗口 Window-->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.5" To="1.0" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
        <Setter Property="FontFamily" Value="SimSun"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="15" ShadowDepth="0" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="windowBorder" Background="{TemplateBinding Background}" Margin="10"
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"      
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ClipToBounds="True">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Margin" TargetName="windowBorder" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--窗口标题 TextBlock-->
    <Style x:Key="WindowTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="50,0,0,0"/>
    </Style>
    <!--窗口内容 Border-->
    <Style x:Key="WindowContent" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE2E2F5" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
   
    <!--基础按钮 Button-->
    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFFBFBFB"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--按钮————基础最小化,最大化和关闭按钮-->
    <Style x:Key="MinMaxCloseButtonBase" BasedOn="{StaticResource ResourceKey=BaseButton}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaxCloseImg" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>
    <Style x:Key="MinImg" TargetType="{x:Type Image}" BasedOn="{StaticResource ResourceKey=MaxCloseImg}">
        <Setter Property="Height" Value="2"/>
    </Style>
    <!--按钮————最小化按钮-->
    <Style x:Key="MinButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=MinMaxCloseButtonBase}">
        <Setter Property="Margin" Value="0,0,65,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Image Source="/Themes;component/Default/Images/min.png" Style="{StaticResource ResourceKey=MinImg}"/>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--按钮————最大化按钮-->
    <Style x:Key="MaxButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=MinMaxCloseButtonBase}">
        <Setter Property="Margin" Value="0,0,35,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Image Source="/Themes;component/Default/Images/max.png" Style="{StaticResource ResourceKey=MaxCloseImg}"/>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--按钮————关闭按钮-->
    <Style x:Key="CloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=MinMaxCloseButtonBase}">
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Name="g" Background="{TemplateBinding Background}">
                        <Image Source="/Themes;component/Default/Images/close.png" Style="{StaticResource ResourceKey=MaxCloseImg}"/>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#FFCE2929"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FFCE2929"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--删除按钮样式-->
    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="g" Background="{TemplateBinding Background}">
                        <Image Name="img" Source="/Themes;component/Default/Images/delete.png" Width="26" Height="26" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="img" Property="Source" Value="/Themes;component/Default/Images/delete_pressed.png"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source" Value="/Themes;component/Default/Images/delete_pressed.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background" Value="#e5e2e2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#cb1212"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#e81515"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--按钮————默认按钮蓝色-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="{StaticResource ResourceKey=MainColor}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background" Value="#e5e2e2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#1b79a7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--按钮————绿色按钮-->
    <Style TargetType="{x:Type Button}" x:Key="GreenButton" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="#829d2e"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background" Value="#e5e2e2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#627d0f"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--按钮————红色按钮-->
    <Style TargetType="{x:Type Button}" x:Key="RedButton" BasedOn="{StaticResource ResourceKey=BaseButton}">
        <Setter Property="Background" Value="#f53e3e"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#ADADAD"/>
                <Setter Property="Background" Value="#e5e2e2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#bf3030"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--文本框 TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <!--密码框 PasswordBox-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Width" Value="249"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!--多选框 CheckBox-->

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Image x:Name="checkImg" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/Themes;component/Default/Images/uncheck.png" Width="12" Height="12"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkImg" Property="Source" Value="/Themes;component/Default/Images/check.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Image x:Name="checkImg" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Source="/Themes;component/Default/Images/rb_unchecked.png" Width="12" Height="12"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center" Margin="3,0,0,0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkImg" Property="Source" Value="/Themes;component/Default/Images/rb_checked.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主菜单 ListBox-->
    <Style x:Key="MainMenu" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainMenuItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Foreground" Value="#818180"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="itemgrid" Width="150" Height="32" CornerRadius="1,1,0,0" VerticalAlignment="Bottom">
                        <Border.Background>
                            <SolidColorBrush Color="#000000"/>
                        </Border.Background>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="itemgrid" Property="Background" Value="#FFFFFF"/>
                            
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="itemgrid" Property="Background" Value="{StaticResource ResourceKey=MainColor}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#FFFFFF"/>
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ResourceKey=MainColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--正常和选择后都是透明背景的ListBoxItem-->
    <Style x:Key="TransparentListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="itemgrid" Background="Transparent">
                        <ContentPresenter Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="itemgrid" Property="Background" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="itemgrid" Property="Background" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--无边框的ListBox-->
    <Style x:Key="NoBorderListBox" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderThickness="0" Padding="0" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--按钮条容器 Border-->
    <Style x:Key="ButtonBarContainer" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#f6f6f6"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#acacac"/>
    </Style>

    <!--窗口中按钮在最下方的容器样式 Border-->
    <Style x:Key="ActionContainer" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="#FF2B3DA1"/>
        <Setter Property="Background" Value="#FFFFFF"/>
    </Style>
    
    <!--容器说明文字 TextBlock-->
    <Style x:Key="TBTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="SimHei"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#FF2B3DA1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <!--数据列表 DataGrid-->
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="HorizontalGridLinesBrush" Value="#474747"/>
        <Setter Property="VerticalGridLinesBrush" Value="#474747"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ColumnHeaderHeight" Value="30"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="Background" Value="#ffffff"/>
    
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="AlternatingRowBackground" Value="#bcd5eb"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
    </Style>
    
    <ImageBrush x:Key="ImgBrush" ImageSource="/Themes;component/Default/Images/dgheaderbg.png"/>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SeparatorBrush" Value="White"/>
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid>
                            <!-- an overlayer glass effect -->
                            <Border VerticalAlignment="Top" Name="GradientBorder" BorderThickness="0,0,1,0" BorderBrush="#216394" Height="{TemplateBinding Height}"  Background="{StaticResource  ResourceKey=MainColor}"/>
                                <ContentPresenter Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <Path Name="UpArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="7,0"/>
                                        <LineSegment Point="3.5,6"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,6">
                                        <LineSegment Point="7,6"/>
                                        <LineSegment Point="3.5,0"/>
                                        <LineSegment Point="0,6"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Foreground" Value="#505050"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#fb9533"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#f8c89a"/>
                <Setter Property="Foreground" Value="#505050"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ContentPresenter Margin="3,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#d8d8d9"/>
                <Setter Property="Foreground" Value="#505050"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" BasedOn="{StaticResource ResourceKey=DefaultDataGridCellStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ContentPresenter VerticalAlignment="Center" Margin="3,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="border" Background="#00a3e7" CornerRadius="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="#FFF9F9F9"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="5"/>
                <Setter Property="Height" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                                <Track x:Name="PART_Track">
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="5"/>
                <Setter Property="MinWidth" Value="5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>